Memoization:
int solve(int index, vector<int> &nums, vector<int> &dp)
{
    if(index>=nums.size())
        return 0;
    if(dp[index]!=-1)
        return dp[index];
    int first = nums[index] + solve(index+2, nums, dp);
    int second = solve(index+1, nums, dp);
    return dp[index] = max(first, second);
}
int rob(vector<int>& nums) {
    vector<int> dp(nums.size(), -1);
    return solve(0, nums, dp);
}


Tabulation:
int rob(vector<int>& nums) {
        if(nums.size()==1)
            return nums[0];
        if(nums.size()==2)
            return max(nums[0], nums[1]);
        vector<int> dp(nums.size()+1, 0);
        dp[0] = nums[0];
        dp[1] = max(nums[0], nums[1]);
        for(int i = 2;i<nums.size();i++)
        {
            dp[i] = max((nums[i] + dp[i-2]), dp[i-1]);
        }
        return dp[nums.size()-1];
    }
