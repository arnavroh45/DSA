Approach:  pehle check ki mid value left se badi hai ya nahi, agar badi hai that means ki left half sorted hai, else right half sorted hai, kyunki ek half toh sorted hoga hi, and hum uss sorted half mai se minimum element utha lenge
and then doosre half ko explore karenge and jo bhi minimum element milega finally that is the answer

Code:
int findMin(vector<int>& arr) {
        int low = 0, high = arr.size()-1, ans=INT_MAX;
        while(low<=high)
        {
            int mid = low + (high-low)/2;
            if(arr[mid]>=arr[low])
            {
                ans = min(arr[low], ans);
                low = mid+1;
            }
            else
            {
                ans = min(arr[mid], ans);
                high = mid-1;
            }
        }
        return ans;
        
    }
