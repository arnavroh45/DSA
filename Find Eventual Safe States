Appraoch: reverse the edges and then apply topo sort

Code:
vector<int> topo(int n, vector<int> adj[], vector<int> &indegree)
    {
        queue<int> q;
        for(int  i = 0; i<n;i++)    
        {
            if(indegree[i]==0)
                q.push(i);
        }
        vector<int> ans;
        while(!q.empty())
        {
            int curr = q.front();
            q.pop();
            ans.push_back(curr);
            for(auto it : adj[curr])
            {
                indegree[it]--;
                if(indegree[it]==0)
                    q.push(it);
            }
            cout<<endl;
        }
        return ans;
    }
    vector<int> eventualSafeNodes(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> adj[graph.size()];
        vector<int> indegree(graph.size(), 0);
        for(int i = 0;i<graph.size();i++)
        {
            for(int j = 0;j<graph[i].size();j++)
            {
                adj[graph[i][j]].push_back(i);
                indegree[i]++;
            }
        }
        vector<int> ans = topo(graph.size(), adj, indegree);
        sort(ans.begin(), ans.end());
        return ans;
    }
