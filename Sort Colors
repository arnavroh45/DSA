Brute Force - using any sorting algorithm

Better approach - use a hash map to store the frequency and then change the vector accodingly

Optimal Approach - (Dutch FLag Algorithm) we keep 3 pointers low, mid and high. low points to 0s, mid points to 1s and high points to 2s. 
                    we check the arr[mid] everytime
                    arr[mid] == 0, swap with low and increase low and mid
                    arr[mid] == 1, increment mid
                    arr[mid] == 2, swap mid and high, increment both

COde(better approach)
void sortColors(vector<int>& nums) {
        map<int, int> umap;
        for(auto i:nums)
            umap[i]++;
        nums.clear();
        for(auto pair:umap)
        {
            for(int i=0;i<pair.second;i++)
                nums.push_back(pair.first);
        }   
        
    }

Code(Optimal APproach)
void sortColors(vector<int>& nums) {
        int low = 0, mid = 0, high = nums.size()-1;
        while(mid<=high)
        {
            if(nums[mid]==0)
            {
                swap(nums[low], nums[mid]);
                low++;
                mid++;
            }
            else if(nums[mid]==2)
            {
                swap(nums[mid], nums[high]);
                high--;
                mid++;
            }
            else
                mid++;
        }
        
    }
