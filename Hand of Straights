Approach: Change each element when it gets used

class Solution {
public:
    bool function(vector<int>& hand, int i, int n, int grp)
    {
        cout<<hand[i];
        int next = hand[i]+1;
        hand[i] = -1;
        i++;
        int count = 1;
        while(i<n && count<grp)
        {
            if(hand[i]==next)
            {
                next = hand[i]+1;
                hand[i] = -1;
                count++;
            }
            i++;
        }

        cout<<count;
        return count == grp;
    }
    bool isNStraightHand(vector<int>& hand, int groupSize) {
        int n = hand.size();
        if(n%groupSize!=0)
            return false;
        sort(hand.begin(), hand.end());
        for(int i = 0;i<n;i++)
        {
            if(hand[i]>=0)
            {
                if(!function(hand, i, n, groupSize))
                return false;
            }
        }
        return true;

        
    }
};
