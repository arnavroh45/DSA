Approach: in priority_queue(min heap) the variables stored are first distance till the node and then the node, taaki hum jo bhi smaller distance hai same node ka pehle usey dekhe and then the bigger distance. hum iski jagah sets bhi 
use kar sakte, wahan par hum agar koi bada distance exista karta hai uss particular node ke liye usey erase kar dete, but usmai logn time aur lagta but faaltu ki iterations nahi hoti

vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        // Code here
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>> > pq;
        vector<int> dist(V, INT_MAX);
        pq.push({0, S});
        dist[S] = 0;
        while(!pq.empty())
        {
            int distance = pq.top().first;
            int currnode = pq.top().second;
            pq.pop();
            for(auto it: adj[currnode])
            {
                int edgewt = it[1];
                int adjnode = it[0];
                
                if(distance+edgewt < dist[adjnode])
                {
                    dist[adjnode] = distance+edgewt;
                    pq.push({dist[adjnode], adjnode});
                }
            }
        }
        return dist;
        
    }
