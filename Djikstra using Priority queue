vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        // Code here
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>> > pq;
        vector<int> dist(V, INT_MAX);
        pq.push({0, S});
        dist[S] = 0;
        while(!pq.empty())
        {
            int distance = pq.top().first;
            int currnode = pq.top().second;
            pq.pop();
            for(auto it: adj[currnode])
            {
                int edgewt = it[1];
                int adjnode = it[0];
                
                if(distance+edgewt < dist[adjnode])
                {
                    dist[adjnode] = distance+edgewt;
                    pq.push({dist[adjnode], adjnode});
                }
            }
        }
        return dist;
        
    }
