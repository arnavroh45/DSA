Condition - the first element of every row is greater than that of the last element in the previous row

Brute- check for each value

Optimal
Approach : 
if we take all the elemnts in the matrix to be a single 1d array, then total elements would be n*m, and we can easily apply binary search on that as we are told that the first element is greater than the last element of the prev row, so the indices that
we get from the binary search, we can manipulate those indices, to get the exact element in the matrix, 
if we get the index as 6 after binary search and the size of the matrix is 3X4, 
to get the coordinates - r = 6/4, c = 6%4, divide by column size for row, and modulo for the column 
we get the r = 1, c = 2

Code:
bool searchMatrix(vector<vector<int>>& matrix, int target) {
     
        int n=matrix.size();
        int m=matrix[0].size();

        int lo=0;
        int hi=(n*m)-1; //gives the size of the 2d matrix
        while(lo<=hi){
            int mid=lo+(hi-lo)/2;
            if(target==matrix[mid/m][mid%m]) 
                return true;
            if(target>matrix[mid/m][mid%m]){
                lo=mid+1;
            }
            else
                hi=mid-1; 
        }
        return false;

    }
